(function(){"use strict";angular.module("team",[]);angular.module("player",[]);angular.module("field",[]);angular.module("app.requests",[]);angular.module("5x5playerApp",["team","player","field","app.requests","ngRoute","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"partials/home.html",controller:"HomeController",controllerAs:"vm"});e.when("/teams",{templateUrl:"partials/team/teams.html",controller:"TeamListController",controllerAs:"vm",requireAuth:true}).when("/teams/edit/:teamid",{templateUrl:"partials/team/edit-team.html",controller:"TeamEditController",controllerAs:"vm",resolve:{teamId:["$route",function(e){return e.current.params.teamid}]},requireAuth:true}).when("/teams/new",{templateUrl:"partials/team/create-team.html",controller:"TeamCreateController",controllerAs:"vm",requireAuth:true});e.when("/players",{templateUrl:"partials/player/players.html",controller:"PlayerListController",controllerAs:"vm",requireAuth:true}).when("/players/edit/:playerid",{templateUrl:"partials/player/edit-player.html",controller:"PlayerEditController",controllerAs:"vm",resolve:{playerId:["$route",function(e){return e.current.params.playerid}]},requireAuth:true}).when("/players/new",{templateUrl:"partials/player/create-player.html",controller:"PlayerCreateController",controllerAs:"vm",requireAuth:true});e.when("/fields",{templateUrl:"partials/field/fields.html",controller:"FieldListController",controllerAs:"vm",requireAuth:true}).when("/fields/edit/:fieldid",{templateUrl:"partials/field/edit-field.html",controller:"FieldEditController",controllerAs:"vm",resolve:{fieldId:["$route",function(e){return e.current.params.fieldid}]},requireAuth:true}).when("/fields/new",{templateUrl:"partials/field/create-field.html",controller:"FieldCreateController",controllerAs:"vm",requireAuth:true});e.when("/register",{templateUrl:"partials/auth/register.html",controller:"RegisterController",controllerAs:"vm"}).when("/login",{templateUrl:"partials/auth/login.html",controller:"LoginController",controllerAs:"vm"});e.when("/requests",{templateUrl:"partials/requests/home.html",controller:"RequestsController",controllerAs:"vm",requireAuth:true}).when("/opponent-requests",{templateUrl:"partials/requests/opponent-requests.html",controller:"OpponentRequestsController",controllerAs:"vm",requireAuth:true}).when("/player-requests",{templateUrl:"partials/requests/player-requests.html",controller:"PlayerRequestsController",controllerAs:"vm",requireAuth:true});e.when("/home",{templateUrl:"partials/home.html",controller:"HomeController",controllerAs:"vm"}).otherwise("/home")}])})();(function(){"use strict";angular.module("5x5playerApp").factory("AuthenticationService",e);e.$inject=["$window","$http"];function e(e,t){var r={};r.saveToken=function(t){e.localStorage["5x5player-token"]=t};r.getToken=function(){return e.localStorage["5x5player-token"]};r.register=function(e){return t.post("/api/register",e).success(function(e){r.saveToken(e.token)})};r.login=function(e){return t.post("/api/login",e).success(function(e){r.saveToken(e.token)})};r.logout=function(){e.localStorage.removeItem("5x5player-token")};r.isLoggedIn=function(){var t=r.getToken();if(t){var n=JSON.parse(e.atob(t.split(".")[1]));return n.exp>Date.now()/1e3}else{return false}};r.currentUser=function(){if(r.isLoggedIn()){var t=r.getToken();var n=JSON.parse(e.atob(t.split(".")[1]));return{email:n.email,name:n.name}}};return r}})();(function(){"use strict";angular.module("5x5playerApp").controller("RootController",e);e.$inject=["$scope","$location","AuthenticationService"];function e(e,t,r){var n=function(){e.$on("$routeChangeStart",function(e,n){if(n.requireAuth&&!r.isLoggedIn()){t.path("/home")}})};var l=function(){n()};l()}})();(function(){"use strict";angular.module("5x5playerApp").factory("UserService",e);function e(e,t){var r={};var n={headers:{Authorization:"Bearer "+t.getToken()}};r.getTeams=function(){return e.get("/api/user/teams",n)};return r}e.$inject=["$http","AuthenticationService"]})();(function(){"use strict";angular.module("team").factory("TeamService",e);function e(e,t){var r={};var n={headers:{authorization:"Bearer "+t.getToken()}};r.getAllTeams=function(){return e.get("/api/teams",n)};r.addTeam=function(t){return e.post("/api/teams",t,n)};r.getTeamById=function(t){return e.get("/api/teams/"+t,n)};r.updateTeam=function(t){return e.put("/api/teams/"+t._id,t,n)};r.deleteTeam=function(t){return e.delete("/api/teams/"+t,n)};r.deleteAll=function(){return e.delete("/api/teams",n)};r.createMsg={};r.updateMsg={};return r}e.$inject=["$http","AuthenticationService"]})();(function(){"use strict";angular.module("field").factory("FieldService",e);function e(e,t){var r={};var n={headers:{authorization:"Bearer "+t.getToken()}};r.getAllFields=function(){return e.get("/api/fields",n)};r.updateField=function(t){return e.put("/api/fields/"+t._id,t,n)};r.createField=function(t){return e.post("/api/fields",t,n)};r.getFieldById=function(t){return e.get("/api/fields/"+t,n)};r.deleteField=function(t){return e.delete("/api/fields/"+t,n)};r.deleteAll=function(){return e.delete("/api/fields",n)};r.createMsg={};r.updateMsg={};return r}e.$inject=["$http","AuthenticationService"]})();(function(){"use strict";angular.module("player").factory("PlayerService",e);function e(e,t){var r={};var n={headers:{authorization:"Bearer "+t.getToken()}};r.getAllPlayers=function(){return e.get("/api/players",n)};r.getPlayerById=function(t){return e.get("/api/players/"+t,n)};r.updatePlayer=function(t){return e.put("/api/players/"+t._id,t,n)};r.createPlayer=function(t){return e.post("/api/players",t,n)};r.deletePlayer=function(t){return e.delete("/api/players/"+t,n)};r.deleteAll=function(){return e.delete("/api/players",n)};r.createMsg={};r.updateMsg={};return r}e.$inject=["$http","AuthenticationService"]})();(function(){"use strict";angular.module("app.requests").factory("OpponentRequestService",e);angular.module("app.requests").factory("PlayerRequestService",t);function e(e,t){var r={};var n={headers:{authorization:"Bearer "+t.getToken()}};r.createRequest=function(t){return e.post("/api/opponent-requests",t,n)};r.getRequests=function(){return e.get("/api/opponent-requests",n)};return r}e.$inject=["$http","AuthenticationService"];function t(e,t){var r={};var n={headers:{authorization:"Bearer "+t.getToken()}};r.getRequests=function(){return e.get("/api/player-requests",n)};r.getRequestById=function(t){return e.get("/api/player-requests/"+t,n)};r.createRequest=function(t){return e.post("/api/player-requests",t,n)};r.updateRequest=function(t,r){return e.put("/api/player-requests/"+t,r,n)};r.deleteRequests=function(){return e.delete("/api/player-requests",n)};r.deleteRequest=function(t){return e.delete("/api/player-requests/"+t,n)};return r}t.$inject=["$http","AuthenticationService"]})();(function(){"use strict";angular.module("field").controller("FieldListController",e);angular.module("field").controller("FieldEditController",r);angular.module("field").controller("FieldCreateController",t);function e(e){var t=this;t.deleteField=function(n){e.deleteField(n).success(function(e){t.deleteMsg={success:"Field with id "+n+" has been deleted successfully"};r()}).error(function(e){t.deleteMsg={error:e.message}})};t.deleteAll=function(){e.deleteAll().success(function(e){t.deleteMsg={success:"All fields have been deleted successfully"};r()}).error(function(e){t.deleteMsg={error:e.message}})};var r=function(){e.getAllFields().success(function(e){t.fields=e;t.total=t.fields.length}).error(function(e){})};var n=function(){r();t.createMsg=angular.copy(e.createMsg);t.updateMsg=angular.copy(e.updateMsg);e.createMsg={};e.updateMsg={}};n()}function t(e,t){var r=this;r.createField=function(){console.log(r.field);t.createField(r.field).success(function(r){t.createMsg={success:"Field with id "+r._id+" has been successfully created."};e.path("/fields")}).error(function(r){t.createMsg={error:r.message};e.path("/fields")})};var n=function(){};n()}function r(e,t,r){var n=this;n.updateField=function(){console.log(n.field);r.updateField(n.field).success(function(e){r.updateMsg={success:"Field with id "+e._id+" has been successfully updated."};t.path("/fields")}).error(function(e){r.updateMsg={error:e.message};t.path("/fields")})};var l=function(){r.getFieldById(e).success(function(e){n.field=e}).error(function(e){})};l()}e.$inject=["FieldService"];t.$inject=["$location","FieldService"];r.$inject=["fieldId","$location","FieldService"]})();(function(){"use strict";angular.module("5x5playerApp").controller("NavigationController",e);function e(e,t,r){var n=this;n.logout=function(){r.logout();e.path("/");t.reload()};var l=function(){console.log("navigationCtrl");n.currentPath=e.path();n.isLoggedIn=r.isLoggedIn();n.currentUser=r.currentUser()};l()}e.$inject=["$location","$route","AuthenticationService"]})();(function(){"use strict";angular.module("5x5playerApp").controller("RegisterController",t);angular.module("5x5playerApp").controller("LoginController",e);function e(e,t){var r=this;r.credentials={email:"",password:""};r.returnPage=e.search().page||"/";r.onSubmit=function(){r.formError="";if(!r.credentials.email||!r.credentials.password){r.formError="All fields required, please try again";return false}else{r.doLogin()}};r.doLogin=function(){r.formmError="";t.login(r.credentials).error(function(e){r.formError=e}).then(function(){e.search("page",null);e.path(r.returnPage)})}}function t(e,t){var r=this;r.onSubmit=function(){if(!r.credentials.name||!r.credentials.email||!r.credentials.password){r.formError="All fields required, please try again";return false}else{r.doRegister()}};r.doRegister=function(){r.formError="";t.register(r.credentials).error(function(e){r.formError=e}).then(function(){e.search("page",null);e.path(r.returnPage)})};var n=function(){r.credentials={name:"",email:"",password:""};r.returnPage=e.search().page||"/"};n()}e.$inject=["$location","AuthenticationService"];t.$inject=["$location","AuthenticationService"]})();(function(){"use strict";angular.module("5x5playerApp").controller("HomeController",e);function e(e){var t=this;var r=function(){if(e.isLoggedIn()){t.user=e.currentUser()}else{t.user={name:"Guest"}}};r()}e.$inject=["AuthenticationService"]})();(function(){"use strict";angular.module("team").controller("TeamListController",e);angular.module("team").controller("TeamCreateController",t);angular.module("team").controller("TeamEditController",r);function e(e,t,r){var n=this;n.deleteTeam=function(e){t.deleteTeam(e).success(function(t){n.deleteMsg={success:"Team with id "+e+" has been deleted successfully"};a()}).error(function(e){n.deleteMsg={error:e.message}})};n.deleteAll=function(){t.deleteAll().success(function(e){n.deleteMsg={success:"All teams have been deleted successfully"};a()}).error(function(e){n.deleteMsg={error:e.message}})};var l=function(){n.isLoggedIn=r.isLoggedIn()};var a=function(){n.teams=[];t.getAllTeams().success(function(e){n.teams=e;n.total=n.teams.length}).error(function(e){n.error=e.message})};var o=function(){l();a();n.updateMsg=angular.copy(t.updateMsg);n.createMsg=angular.copy(t.createMsg);t.updateMsg={};t.createMsg={}};o()}function t(e,t,r){var n=this;n.addTeam=function(){console.log(n.team);t.addTeam(n.team).success(function(r){t.createMsg={success:"A team with id "+r._id+" has been created"};e.path("/teams")}).error(function(r){t.createMsg={error:r.message};e.path("/teams")})};var l=function(){if(!r.isLoggedIn()){e.search("page","/teams/new");e.path("/login")}};l()}function r(e,t,r,n){var l=this;l.updateTeam=function(){console.log(l.team);r.updateTeam(l.team).success(function(e){r.updateMsg={success:"Team with "+e._id+" have been updated successfully"};t.path("/teams")}).error(function(e){r.updateMsg={error:e.message};t.path("/teams")})};var a=function(){if(!n.isLoggedIn()){t.search("page","/teams/edit/"+e);t.path("/login");return}r.getTeamById(e).success(function(e){l.team=e}).error(function(t){l.errorMsg="No team exists with "+e+" ID"})};a()}e.$inject=["$scope","TeamService","AuthenticationService"];r.$inject=["teamId","$location","TeamService","AuthenticationService"];t.$inject=["$location","TeamService","AuthenticationService"]})();(function(){"use strict";angular.module("player").controller("PlayerListController",e);angular.module("player").controller("PlayerEditController",r);angular.module("player").controller("PlayerCreateController",t);function e(e){var t=this;t.players=[];t.deletePlayer=function(n){e.deletePlayer(n).success(function(e){t.deleteMsg={success:"Player with id "+n+" has been deleted successfully"};r()}).error(function(e){t.deleteMsg={error:e.message}})};t.deleteAll=function(){e.deleteAll().success(function(e){t.deleteMsg={success:"All players have been deleted successfully"};r()}).error(function(e){t.deleteMsg={error:e.message}})};var r=function(){e.getAllPlayers().success(function(e){t.players=e;t.total=t.players.length}).error(function(e){})};var n=function(){r();t.createMsg=angular.copy(e.createMsg);t.updateMsg=angular.copy(e.updateMsg);e.createMsg={};e.updateMsg={}};n()}function t(e,t){var r=this;r.createPlayer=function(){console.log(r.player);t.createPlayer(r.player).success(function(r){t.createMsg={success:"Player with id "+r._id+" has been successfully created."};e.path("/players")}).error(function(r){t.createMsg={error:r.message};e.path("/players")})};var n=function(){};n()}function r(e,t,r){var n=this;n.updatePlayer=function(){console.log(n.player);r.updatePlayer(n.player).success(function(e){r.updateMsg={success:"Player with id "+e._id+" has been successfully updated."};t.path("/players")}).error(function(e){r.updateMsg={error:e.message};t.path("/players")})};var l=function(){r.getPlayerById(e).success(function(e){n.player=e}).error(function(e){})};l()}e.$inject=["PlayerService"];t.$inject=["$location","PlayerService"];r.$inject=["playerId","$location","PlayerService"]})();(function(){"use strict";angular.module("app.requests").controller("RequestsController",e);angular.module("app.requests").controller("OpponentRequestsController",t);angular.module("app.requests").controller("FieldsModalController",r);angular.module("app.requests").controller("PlayerRequestsController",n);function e(e){var t=this;t.createOpponentRequest=function(){e.path("/opponent-requests")};var r=function(){};r()}function t(e,t,r,n){var l=this;var a=[];l.openFields=function(){var e=t.open({templateUrl:"partials/modals/fields-modal.html",controller:"FieldsModalController as vm"});e.result.then(function(e){if(e.length>0){l.opponentReq.field=e[0]}})};l.createRequest=function(){if(a.length>0){l.opponentReq.team=angular.copy(a[0])}r.createRequest(l.opponentReq).success(function(t){e.reload()})};var o=function(){l.createView="partials/requests/opponent-requests/create.html";l.view="partials/requests/opponent-requests/list.html"};var s=function(){r.getRequests().success(function(e){l.requests=e})};var i=function(){n.getTeams().success(function(e){a=e})};var u=function(){l.opponentReq={field:{},team:{}};o();s();i()};u()}function r(e,t){var r=this;var n=[];r.close=function(){e.close(n)};r.toggleField=function(e){if(n.indexOf(e)===-1){n.push(e)}else{n.splice(n.indexOf(e),1)}};var l=function(){t.getAllFields().success(function(e){r.fields=e})};var a=function(){l()};a()}function n(e){var t=this;var r=function(){e.getRequests().success(function(e){t.requests=e})};var n=function(){t.createView="partials/requests/player-requests/create.html";t.view="partials/requests/player-requests/list.html"};var l=function(){n();r()};l()}e.$inject=["$location"];r.$inject=["$modalInstance","FieldService"];t.$inject=["$route","$modal","OpponentRequestService","UserService"];n.$inject=["PlayerRequestService"]})();(function(){"use strict";angular.module("5x5playerApp").directive("footerGeneric",e);function e(){return{restrict:"EA",templateUrl:"/partials/common/footerGeneric.html"}}})();(function(){"use strict";angular.module("5x5playerApp").directive("navigationGeneric",e);function e(){return{restrict:"EA",templateUrl:"partials/common/navigationGeneric.html",controller:"NavigationController as navvm"}}})();(function(){"use strict";angular.module("5x5playerApp").directive("successGeneric",e);function e(){return{restrict:"EA",scope:{success:"=success"},templateUrl:"/partials/common/successGeneric.html"}}})();(function(){"use strict";angular.module("5x5playerApp").directive("showResults",e);function e(){return{restrict:"EA",scope:{resultsNumber:"=results"},templateUrl:"/partials/common/showResults.html"}}})();